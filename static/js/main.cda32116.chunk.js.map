{"version":3,"sources":["controllers/actions.jsx","controllers/api.jsx","controllers/StateContext.jsx","styles/styles.jsx","components/CustomTableCell.jsx","components/CustomTable.jsx","components/AlertMessage.jsx","components/CreateUpdateField.jsx","components/CreateUpdateForm.jsx","components/CreateUpdateNews.jsx","components/HomePage.jsx","App.jsx","index.jsx"],"names":["GET_ALL","GET_ONE","APPEND","UPDATE","REMOVE","actions","type","value","ws","WebSocket","requests","action","send","JSON","stringify","data","id","console","log","news","title","description","posted","StateContext","React","createContext","StyledTableCell","withStyles","theme","head","backgroundColor","palette","common","black","color","white","body","fontSize","TableCell","StyledTableRow","root","hover","TableRow","useAlertStyle","makeStyles","wrap","position","right","padding","height","width","useNewsForm","form","display","flexDirection","justifyContent","margin","boxShadow","paper","alignItems","marginBottom","inputs","minHeight","lineHeight","border","outline","useTable","row","delete","cursor","useButton","button","textTransform","fontWeight","letterSpacing","borderRadius","useTypography","link","textDecoration","fontFamily","text","textAlign","h1","h2","h3","h5","pLink","boxSizing","usePage","homePage","tablePage","updatingPage","left","opacity","zIndex","CustomTableCell","info","textStyle","component","style","scope","align","Typography","className","variant","CustomTable","setUserAction","setUserPicksId","context","useContext","table","typography","selectedItem","event","target","TableContainer","Paper","Table","TableHead","TableBody","map","index","Tooltip","onClick","interactive","placement","window","confirm","setNews","AlertMessage","trySubmit","serverResponse","alert","Alert","severity","AlertTitle","NewsFormField","callback","newsForm","TextareaAutosize","onChange","maxRows","placeholder","NewsForm","oneNews","useState","newTitle","setNewTitle","newDescription","setNewDescription","newPosted","setNewPosted","setServerResponse","setTrySubmit","changedNews","noValidate","autoComplete","Button","CreateUpdateNews","userAction","operation","newOneNews","Date","toLocaleDateString","HomePage","userPicksId","find","item","App","useEffect","addEventListener","parse","checkConnection","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cda32116.chunk.js","sourcesContent":["export const GET_ALL = 'GET_ALL';\nexport const GET_ONE = 'GET_ONE';\nexport const APPEND = 'APPEND';\nexport const UPDATE = 'UPDATE';\nexport const REMOVE = 'REMOVE';\n\nexport const actions = {\n  getAll: () => ({ type: GET_ALL }),\n  getOne: (value) => ({ type: GET_ONE, value }),\n  append: (value) => ({ type: APPEND, value }),\n  update: (value) => ({ type: UPDATE, value }),\n  remove: (value) => ({ type: REMOVE, value }),\n};\n","import { GET_ALL, GET_ONE, APPEND, UPDATE, REMOVE} from './actions';\n\nconst ws = new WebSocket('ws://localhost:8080', 'echo-protocol');\n\nexport const checkConnection = (callback) => {\n  ws.addEventListener('open', callback);\n};\n\nexport const requests = (action) => {\n  switch (action.type) {\n    case (GET_ALL):\n      ws.send(JSON.stringify({ action: GET_ALL }));\n      break;\n    case (GET_ONE):\n      ws.send(JSON.stringify({\n        action: GET_ONE,\n        data: { id: action.value },\n      }));\n      break;\n    case (APPEND):\n      console.log('request to server', action)\n        ws.send(JSON.stringify({\n          action: APPEND,\n          data: { ...action.value },\n        }));\n      break;\n    case (UPDATE):\n      ws.send(JSON.stringify({\n        action: UPDATE,\n        data: { ...action.value },\n      }));\n      break;\n    case (REMOVE):\n      console.log('try delete: ', action.value);\n      ws.send(JSON.stringify({\n        action: REMOVE,\n        data: { id: action.value },\n      }));\n      break;\n\n    default:\n      return {};\n  };\n};\n\nexport const listen = (callback) => {\n  ws.addEventListener('message', (data) => {\n    callback(JSON.parse(data.data));\n  });\n};\n","import React from 'react';\n\nconst news = {\n  id: '',\n  title: '',\n  description: '',\n  posted: '',\n};\n\nexport const StateContext = React.createContext(news);\n","import { makeStyles, withStyles } from '@material-ui/core/styles';\n\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\n\nexport const StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nexport const StyledTableRow = withStyles((theme) => ({\n  root: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nexport const useAlertStyle = makeStyles({\n  wrap: {\n    position: 'absolute',\n    right: '0',\n    padding: '0 10px',\n    height: '30px',\n    width: 'max-content',\n  },\n});\n\nexport const useNewsForm = makeStyles({\n  form: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-around',\n    margin: '0 0 30px',\n    width: '100%',\n    height: 'max-content',\n    boxShadow: '0px 4px 12px rgba(0, 0, 0, 0.15)',\n  },\n  paper: {\n    display: 'flex',\n    justifyContent: 'space-around',\n    alignItems: 'center',\n    marginBottom: '10px',\n  },\n  inputs: {\n    padding: '5px',\n    width: '70%',\n    minHeight: '40px',\n    fontSize: '14px',\n    lineHeight: '150%',\n    border: 'none',\n    outline: 'none',\n  },\n});\n\nexport const useTable = makeStyles({\n  paper: {\n    marginBottom: '10px',\n  },\n  row: {\n    '& .cell': {\n      padding: '0'\n    },\n  },\n  delete: {\n    fontSize: '12px',\n    lineHeight: '18px',\n    '&:hover': {\n      cursor: 'pointer',\n    },\n  },\n});\n\nexport const useButton = makeStyles({\n  button: {\n    padding: '10px 75px',\n    textTransform: 'uppercase',\n    fontSize: '14px',\n    fontWeight: 500,\n    color: '#000',\n    letterSpacing: '2px',\n    borderRadius: '5px',\n    backgroundColor: '#efefef',\n    '&:hover': {\n      boxShadow: '0px 4px 12px rgba(0, 0, 0, 0.55)',\n    },\n  },\n});\n\nexport const useLink = makeStyles({\n  link: {\n    padding: '10px 30px',\n    alignItems: 'center',\n    textDecoration: 'none',\n    textTransform: 'uppercase',\n    fontFamily: 'Roboto, sans-serif',\n    fontSize: '14px',\n    fontWeight: 500,\n    lineHeight: '50px',\n    color: '#000',\n    letterSpacing: '2px',\n    borderRadius: '5px',\n    backgroundColor: '#efefef',\n    '&:hover': {\n      cursor: 'pointer',\n      boxShadow: '0px 4px 12px rgba(0, 0, 0, 0.55)',\n    },\n  },\n  text: {\n    margin: '0',\n    alignItems: 'center',\n    textAlign: 'center',\n    textDecoration: 'none',\n    color: '#000',\n    backgroundColor: '#f00',\n  },\n});\n\nexport const useTypography = makeStyles(({\n  h1: {\n    margin: '0 0 50px',\n    padding: '0',\n    fontWeight: 700,\n    fontSize: '24px',\n    lineHeight: '150%',\n    letterSpacing: '1px',\n  },\n  h2: {\n    margin: '0 0 30px',\n    padding: '0',\n    fontWeight: 500,\n    fontSize: '18px',\n    lineHeight: '150%',\n    letterSpacing: '1px',\n    color: '#fff',\n  },\n  h3: {\n    margin: '0',\n    padding: '16px 24px',\n    fontWeight: 500,\n    fontSize: '16px',\n    lineHeight: '150%',\n    letterSpacing: '1px',\n    color: '#fff',\n  },\n  h5: {\n    margin: '0 20px',\n    padding: '0',\n    width: '15%',\n    fontWeight: 500,\n    fontSize: '16px',\n    lineHeight: '150%',\n    color: '#000',\n    boxShadow: 'none',\n  },\n  pLink: {\n    boxSizing: 'border-box',\n    margin: '0',\n    padding: '10px',\n    width: '100%',\n    height: 'max-content',\n    fontSize: '14px',\n    lineHeight: '150%',\n    '&:hover': {\n      cursor: 'pointer',\n    },\n  },\n}));\n\nexport const usePage = makeStyles(({\n  homePage: {\n    margin: '5% 5% 0',\n    height: 'max-content',\n    textAlign: 'center',\n    boxShadow: 'none',\n  },\n  tablePage: {\n    marginBottom: '25px',\n  },\n  updatingPage: {\n    position: 'absolute',\n    left: '5%',\n    right: '5%',\n    padding: '50px',\n    boxSizing: 'border-box',\n    height: 'max-content',\n    backgroundColor: '#444',\n    opacity: '0.98',\n    zIndex: 1,\n  },\n}));\n","import React from 'react';\n\nimport Typography from '@material-ui/core/Typography';\n\nimport { StyledTableCell } from '../styles/styles';\n\n/**   MAIN FUNCTION COMPONENT  */\nexport const CustomTableCell = ({ id, info, textStyle }) => {\n\n  return (\n    <StyledTableCell\n      component=\"th\"\n      style={{ padding: '0'}}\n      scope=\"row\"\n      align=\"center\"\n    >\n\n      <Typography\n        className={textStyle}\n        variant=\"body2\"\n        id={id}\n      >\n        {info}\n      </Typography>\n\n    </StyledTableCell>\n  );\n}\n","import React, { useContext } from 'react';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nimport { useTable, useTypography, StyledTableRow } from '../styles/styles';\nimport { CustomTableCell } from './CustomTableCell';\n\nimport { actions } from '../controllers/actions';\nimport { requests } from '../controllers/api';\nimport { StateContext} from '../controllers/StateContext';\n\n/**   MAIN FUNCTION COMPONENT  */\nexport const CustomTable = ({ setUserAction, setUserPicksId }) => {\n  const context = useContext(StateContext);\n\n  const table = useTable();\n  const typography = useTypography();\n\n  const selectedItem = (event) => {\n    console.log(event.target.id);\n    setUserAction('update');\n    setUserPicksId(event.target.id);\n  };\n\n  const deleteItem = (id) => {\n    const result = window.confirm('Do you want delete news?');\n    if (!result) {\n      return;\n    } else {\n      requests(actions.remove(id), context.setNews);\n    }\n  };\n\n  return (\n    <TableContainer component={Paper} className={table.paper}>\n      <Table aria-label=\"customized table\">\n\n        <TableHead>\n          <TableRow>\n            <CustomTableCell info='№' textStyle={typography.h3} />\n            <CustomTableCell info='News title' textStyle={typography.h3} />\n            <CustomTableCell info='News description' textStyle={typography.h3} />\n            <CustomTableCell info='Posted' textStyle={typography.h3} />\n          </TableRow>\n        </TableHead>\n\n        <TableBody>\n          {(context.news).map((row, index) => (\n            <Tooltip\n              key={row.id}\n              onClick={selectedItem}\n              interactive\n              placement=\"left\"\n              id={row.id}\n              title={\n                <div\n                  className={table.delete}\n                  onClick={() => deleteItem(row.id)}\n                >\n                  Delete\n                </div>\n              }\n            >\n\n              <StyledTableRow>\n                <CustomTableCell id={row.id} info={index + 1} textStyle={typography.pLink} />\n                <CustomTableCell id={row.id} info={row.title} textStyle={typography.pLink} />\n                <CustomTableCell id={row.id} info={row.description} textStyle={typography.pLink} />\n                <CustomTableCell id={row.id} info={row.posted} textStyle={typography.pLink} />\n              </StyledTableRow>\n\n            </Tooltip>\n          ))}\n\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n","import { Alert, AlertTitle } from '@material-ui/lab';\n\nimport { useAlertStyle } from '../styles/styles';\n\n/**   MAIN FUNCTION COMPONENT  */\nexport const AlertMessage = ({ trySubmit, serverResponse }) => {\n  const alert = useAlertStyle();\n\n  return (\n    <>\n      {\n        trySubmit && serverResponse\n          &&\n            (\n              <Alert className={alert.wrap} severity=\"success\">\n                <AlertTitle>Success publising</AlertTitle>\n              </Alert>\n            )\n      }\n      {\n        trySubmit && !serverResponse\n            &&\n          (\n            <Alert className={alert.wrap} severity=\"error\">\n              <AlertTitle>Error</AlertTitle>\n            </Alert>\n          )\n      }\n    </>\n  );\n}\n","import TextareaAutosize from '@material-ui/core/TextareaAutosize';\nimport Paper from '@material-ui/core/Paper';\n\nimport { useNewsForm, useTypography } from '../styles/styles';\n\n/**   MAIN FUNCTION COMPONENT  */\nexport const NewsFormField = ({ title, value, callback }) => {\n  const newsForm = useNewsForm();\n  const typography = useTypography();\n\n  return (\n    <Paper className={newsForm.paper} component=\"div\">\n\n      <Paper className={typography.h5} component=\"label\">\n        {title}\n      </Paper>\n\n      <TextareaAutosize\n        className={newsForm.inputs}\n        onChange={(event) => callback(event.target.value)}\n        maxRows={4}\n        aria-label=\"maximum height\"\n        placeholder=\"Enter information\"\n        value={value}\n      />\n\n    </Paper>\n  );\n}\n","import { useState, useContext } from 'react';\n\nimport Button from '@material-ui/core/Button';\n\nimport { useNewsForm, useButton } from '../styles/styles';\nimport { AlertMessage } from './AlertMessage';\nimport { NewsFormField } from './CreateUpdateField';\n\nimport { actions } from '../controllers/actions';\nimport { requests } from '../controllers/api';\nimport { StateContext} from '../controllers/StateContext';\n\n/**   MAIN FUNCTION COMPONENT  */\nexport const NewsForm = ({ oneNews }) => {\n  const context = useContext(StateContext);\n\n  const newsForm = useNewsForm();\n  const button = useButton();\n\n  const [newTitle, setNewTitle] = useState(oneNews.title);\n  const [newDescription, setNewDescription] = useState(oneNews.description);\n  const [newPosted, setNewPosted] = useState(oneNews.posted);\n  const [serverResponse, setServerResponse] = useState(false);\n  const [trySubmit, setTrySubmit] = useState(false);\n\n  const changedNews = {\n    id: oneNews.id,\n    title: newTitle,\n    description: newDescription,\n    posted: newPosted,\n  };\n\n  const pressedButton = () => {\n    setTrySubmit(true);\n    setServerResponse(true);\n    if (oneNews.id) {\n      requests(actions.update(changedNews), context.setNews);\n    } else {\n      requests(actions.append(changedNews), context.setNews);\n    }\n  };\n\n  return (\n    <form className={newsForm.form} noValidate autoComplete=\"off\">\n\n      <NewsFormField title='Title' value ={newTitle} callback={setNewTitle} />\n      <NewsFormField title='Description' value={newDescription} callback={setNewDescription} />\n      <NewsFormField title='Updated' value={newPosted} callback={setNewPosted} />\n\n      <Button\n        onClick={pressedButton}\n        variant=\"contained\"\n        className={button.button}\n      >\n        Update information\n\n        <AlertMessage trySubmit={trySubmit} serverResponse={serverResponse} />\n\n      </Button>\n\n    </form>\n  );\n}\n","import Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\nimport { usePage, useTypography, useButton } from '../styles/styles';\nimport { NewsForm } from \"./CreateUpdateForm\";\n\n/**   MAIN FUNCTION COMPONENT  */\nexport const CreateUpdateNews = ({ userAction, setUserAction, oneNews }) => {\n  const paper = usePage();\n  const typography = useTypography();\n  const button = useButton();\n\n  const pressedButton = () => (setUserAction(''));\n\n  return (\n    <Paper className={paper.updatingPage}>\n\n      <Typography variant=\"h2\" className={typography.h2}>\n        {\n          userAction === 'update'\n           ? 'You can update the news information'\n           : 'Create new one news'\n        }\n      </Typography>\n\n      <NewsForm\n        oneNews={oneNews}\n        operation={userAction}\n      />\n\n      <Button\n        onClick={pressedButton}\n        variant=\"contained\"\n        className={button.button}\n      >\n        Back to the news list\n      </Button>\n\n    </Paper>\n  );\n}\n","import { useState, useContext } from 'react';\n\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\nimport { StateContext} from '../controllers/StateContext';\nimport { usePage, useTypography, useButton } from '../styles/styles';\nimport { CustomTable } from './CustomTable';\nimport { CreateUpdateNews } from './CreateUpdateNews';\n\nconst newOneNews = {\n  id: '',\n  title: '',\n  description: '',\n  posted: `${new Date().toLocaleDateString()}`,\n};\n\n/**   MAIN FUNCTION COMPONENT  */\nexport const HomePage = () => {\n  const value = useContext(StateContext);\n\n  const paper = usePage();\n  const button = useButton();\n  const typography = useTypography();\n\n  const [userAction, setUserAction] = useState('');\n  const [userPicksId, setUserPicksId] = useState('');\n\n  const oneNews = (\n    userPicksId\n      ? (value.news).find(item => item.id === userPicksId)\n      : newOneNews\n  );\n\n  const pressedButton = () => {\n    setUserAction('add');\n    setUserPicksId('');\n  };\n\n  return (\n    <Paper className={paper.homePage}>\n\n      <Typography variant=\"h1\" className={typography.h1}>\n        Welcome to the News Posts App\n      </Typography>\n\n      {\n        userAction\n          &&\n          <CreateUpdateNews userAction={userAction} setUserAction={setUserAction} oneNews={oneNews} />\n      }\n\n      <CustomTable setUserAction={setUserAction} setUserPicksId={setUserPicksId}/>\n\n      {\n        !userAction\n          &&\n          <Button\n            onClick={pressedButton}\n            variant=\"contained\"\n            className={button.button}\n          >\n            Create new one news\n          </Button>\n      }\n\n    </Paper>\n  );\n};\n","import { useEffect, useState } from 'react';\n\nimport { listen, requests, checkConnection } from './controllers/api';\nimport { actions } from './controllers/actions';\n\nimport { HomePage } from \"./components/HomePage\";\nimport { StateContext } from './controllers/StateContext';\n\n/**   MAIN FUNCTION COMPONENT  */\nexport const App = () => {\n  const [news, setNews] = useState([]);\n\n  useEffect(() => {\n    listen(setNews);\n    checkConnection(() => requests(actions.getAll(), setNews));\n  }, []);\n\n  return (\n    <StateContext.Provider value={{ news, setNews }}>\n      <HomePage />\n    </StateContext.Provider>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.scss';\nimport { App } from './App';\n\nReactDOM.render(\n  // <StrictMode>\n    <App />,\n  // </StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}